server.port=5001
spring.application.name=api-getaway
#是否与服务发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
spring.cloud.gateway.discovery.locator.enabled=true
#服务路由名小写
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#指定注册中心的地址，Spring Cloud Gateway从注册中心获取已经注册的服务列表。
eureka.client.service-url.defaultZone=http://tjl:tjl@127.0.0.1:5000/eureka
#表示是否将自己注册到Eureka Server，默认为true。
eureka.client.registerWithEureka=false
#表示是否从Eureka Server获取注册信息，默认为true。
eureka.client.fetchRegistry=true


log.path=D:/mylogs2


#====================================spring-data-redis==========================================
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址 （默认为127.0.0.1）
spring.redis.host=127.0.0.1
# Redis服务器连接端口 （默认为6379）
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=3000
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=5
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接池最大连接数
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间(毫秒)
spring.redis.jedis.pool.max-wait=1000
#redis哨兵模式
# spring.redis.sentinel.master=
#哨兵地址端口
# spring.redis.sentinel.nodes=
# 缓存项目命名空间
spring.redis.namespace=standalone
# redis运行模式:standalone(单机模式),sentinel(哨兵模式)
spring.redis.mode=standalone
#是否开启redis客户端
spring.redis.enabled.client=true
#是否开启redis分布式锁(依赖redis客户端开启)
spring.redis.enabled.lock=true
#是否开启实体缓存(实体缓存依赖分布式锁,开启实体缓存必须开启分布式锁)
spring.redis.enabled.cache=false
