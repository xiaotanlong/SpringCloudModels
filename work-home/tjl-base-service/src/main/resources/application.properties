server.port=5002
spring.application.name=base-service
#是否与服务发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
spring.cloud.gateway.discovery.locator.enabled=true
#指定注册中心的地址，Spring Cloud Gateway从注册中心获取已经注册的服务列表。
eureka.client.service-url.defaultZone=http://tjl:tjl@127.0.0.1:5000/eureka
#表示是否将自己注册到Eureka Server，默认为true。
eureka.client.registerWithEureka=true
#表示是否从Eureka Server获取注册信息，默认为true。
eureka.client.fetchRegistry=true
#======================= mybatis-plus configuration =======================
mybatis-plus.mapper-locations=classpath:/mappers/**/*Mapper.xml
mybatis-plus.type-aliases-package=com.tjl.work.service.model
mybatis-plus.type-enums-package=com.tjl.work.service.enums
#======================= database configuration =======================
spring.datasource.url=jdbc:mysql://local.db.cn:3306/bigdb_dev?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.username=root
spring.datasource.password=HMvv4QVjoUryC3kW3VKWvPzGqoNKK4hS2/XM+1tXD1iIXxmUE6BCv363OCU+7Y5lqXm8KNGfNb2PoxZgCFIn8g==
spring.datasource.druid.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIJyeV//uaNUdsujwDG/jZOCo0H8IULc9brfJPJqj+gwF+8muPA2rgZc/NFQSjfNAKGaMj7ipRnybIt9xsj1H4sCAwEAAQ==
#publicKey configurate
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${spring.datasource.druid.publicKey}
#configFilter configirate
#配置监控统计、SQL注入拦截的filters
spring.datasource.druid.filter.config.enabled=true
spring.datasource.druid.filters=stat,wall
#检测连接是否有效
spring.datasource.druid.validationQuery=SELECT 1
####以下可选配
#最大连接池数量，默认为8
spring.datasource.druid.maxActive=10
#初始化建立物理连接的个数，默认为0
spring.datasource.druid.initialSize=1
#获取连接时最大等待时间，单位：毫秒，默认为-1
spring.datasource.druid.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒，默认60秒
#spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒，默认1800秒
#spring.datasource.druid.minEvictableIdleTimeMillis=600000
#====================================spring-data-redis
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址 （默认为127.0.0.1）
spring.redis.host=127.0.0.1
# Redis服务器连接端口 （默认为6379）
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=3000
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=5
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接池最大连接数
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间(毫秒)
spring.redis.jedis.pool.max-wait=1000
#redis哨兵模式
# spring.redis.sentinel.master=
#哨兵地址端口
# spring.redis.sentinel.nodes=
# 缓存项目命名空间
spring.redis.namespace=standalone
# redis运行模式:standalone(单机模式),sentinel(哨兵模式)
spring.redis.mode=standalone
#是否开启redis客户端
spring.redis.enabled.client=true
#是否开启redis分布式锁(依赖redis客户端开启)
spring.redis.enabled.lock=true
#是否开启实体缓存(实体缓存依赖分布式锁,开启实体缓存必须开启分布式锁)
spring.redis.enabled.cache=false
